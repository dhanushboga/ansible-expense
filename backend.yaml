- name: configuration of backend server
  hosts: backend
  become: yes
  vars:
    mysql_password: ExpenseApp@1
  tasks: 
  - name: disable the nodejs
    ansible.builtin.command: dnf module disable nodejs -y

  - name: enable the nodejs
    ansible.builtin.command: dnf module enable nodejs:20 -y

  - name: install the nodejs
    ansible.builtin.package:
     name: "{{ item }}"
     state: present
    loop:
    - nodejs
    - mysql

  - name: Adding the expense user
    ansible.builtin.user:
     name: expense
  
  - name: create the app directory
    ansible.builtin.file:
     path: /app
     state: directory

  - name: Download the code from url
    ansible.builtin.get_url:
     url: https://expense-builds.s3.us-east-1.amazonaws.com/expense-backend-v2.zip
     dest: /tmp/backend.zip


  - name: extract the unzip file
    ansible.builtin.unarchive:
     src: /tmp/backend.zip
     dest: /app
     remote_src: yes

  - name: install dependecies
    community.general.npm:
     path: /app

  - name: copy the backend.service
    ansible.builtin.copy:
     src: backend.service
     dest: /etc/systemd/system/backend.service
     

  - name: import mysql data
    community.mysql.mysql_db:
     state: import
     name: all
     login_user: root
     login_password: "{{ mysql_password }}"
     login_host: mysql.chenchudaws82s.online
     target: /app/schema/backend.sql

  - name: demon reload
    ansible.builtin.systemd_service:
     enabled: yes
     state: restarted
     daemon_reload: true
     name: backend